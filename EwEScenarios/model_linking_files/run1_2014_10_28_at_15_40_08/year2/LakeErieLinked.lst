GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                    10/28/14 15:40:09 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


       
      Code created by:
      Travis Warziniack, USFS Rocky Mountain Research Station
      David Finnoff
      Jenny Johnson
      Version: August 4, 2014
       
      The basic model is developed through a series of steps shown as CGE exercises at
      http://www.warziniack.com/research
       
  13   
  14  Set  f  all factors /
  15  LAB     Employee Compensation
  16  CAP     Proprietary Income
  17  /;
  18   
  19  Set a  all producing sectors /
  20  AGR
  21  AFISH
  22  EFISH
  23  WALL
  24  YPERCH
  25  WPERCH
  26  WBASS
  27  SMELT
  28  CCAT
  29  CARP
  30  BUFF
  31  POW
  32  WATR
  33  MISC
  34  RFISH
  35  AIRT
  36  RAILT
  37  WTRT
  38  TRKT
  39  /
  40   
  41  TAC(a)/
  42   WALL
  43  YPERCH /
  44   
  45  EV(a)/
  46  AGR
  47  AFISH
  48  EFISH
  49  WPERCH
  50  WBASS
  51  SMELT
  52  CCAT
  53  CARP
  54  BUFF
  55  POW
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                    10/28/14 15:40:09 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  56  WATR
  57  MISC
  58  RFISH
  59  AIRT
  60  RAILT
  61  WTRT
  62  TRKT
  63  /;
  64   
  65  Set h households by income decile
  66  /HHD1,HHD2,HHD3,HHD4,HHD5,HHD6,HHD7,HHD8,HHD9/;
  67   
  68  set taxes taxes inventory trade /INDT,INV,DT,FT/;
  69  set t(taxes) /DT,FT/;
  70  set g  governments /FGOV,SGOV/;
  71   
  72  ALIAS(a,c);
  73  alias (a,aa),(c,cc),(h,hh),(f,ff),(g,gg),(t,tt);
  74   
  75  * read in sam data
  76  * $include read_sam.gms
  77   
  78   
  79  *** ----------- DATA ---------------------
  80  ******************************************
  81   
  82   
  83  Table SAM(*,*) intermediate demand j to i
  84   
  85           AGR             EFISH           AFISH           WALL            YPERCH          WPERCH          WBASS           SMELT           CCAT            CARP            BUFF            POW             WATR            MISC            RFISH           
      AIRT            RAILT           WTRT            TRKT
  86  AGR      826.5519187     0               0               0               0               0               0               0               0               0               0               0.448441201     0.010828448     6358.511442     2.176880111     
      0.075068868     10.93024599     0.007869134     0.065828178
  87  EFISH    0               33.80238118     0               0               0               0               0               0               0               0               0               0               0               201.9490416     0.069138643     
      0               0               0               0
  88  AFISH    0               0               0.033997294     0               0               0               0               0               0               0               0               0               0               0.20311353      6.95373E-05     
      0               0               0               0
  89  WALL     0               0               0               0.001385022     0               0               0               0               0               0               0               0               0               0.008274678     2.83289E-06     
      0               0               0               0
  90  YPERCH   0               0               0               0               0.511838772     0               0               0               0               0               0               0               0               3.057931004     0.001046904     
      0               0               0               0
  91  WPERCH   0               0               0               0               0               0.027121799     0               0               0               0               0               0               0               0.162036552     5.54743E-05     
      0               0               0               0
  92  WBASS    0               0               0               0               0               0               0.034673473     0               0               0               0               0               0               0.207153295     7.09204E-05     
      0               0               0               0
  93  SMELT    0               0               0               0               0               0               0               7.34099E-05     0               0               0               0               0               0.00043858      1.50151E-07     
      0               0               0               0
  94  CCAT     0               0               0               0               0               0               0               0               0.01642742      0               0               0               0               0.098144022     3.36003E-05     
      0               0               0               0
  95  CARP     0               0               0               0               0               0               0               0               0               0.011497173     0               0               0               0.068688744     2.35161E-05     
      0               0               0               0
  96  BUFF     0               0               0               0               0               0               0               0               0               0               0.022089969     0               0               0.131974371     4.51823E-05     
      0               0               0               0
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                    10/28/14 15:40:09 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


  97  POW      0               0               0               0               0               0               0               0               0               0               0               14.44045888     0               138.4969691     0.04741539      
      0               0               0               0
  98  WATR     31.83374096     0               0               0               0               0               0               0               0               0               0               0.806453244     6.669242376     3690.918767     1.263611417     
      42.60746477     243.7933974     3.88083543      11.78803785
  99  MISC     4043.850932     143.4520177     0.144279198     0.005877816     2.172163675     0.115100671     0.147148795     0.00031154      0.069715399     0.048792205     0.093746371     41.1619042      3328.935692     518527.7254     177.521532      
      1605.825015     3338.236396     822.2240283     9630.975557
 100  RFISH    1.384440171     0.049111785     4.9395E-05      2.01231E-06     0.000743655     3.94055E-05     5.03774E-05     1.06658E-07     2.38675E-05     1.67043E-05     3.20947E-05     0.014092061     1.139684023     177.521532      0.060775717     
      0.549765235     1.142868183     0.281494049     3.297230701
 101  AIRT     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 102  RAILT    18.76888439     0               0               0               0               0               0               0               0               0               0               0               4.818417119     201.2570194     0.068901724     
      0               0               0               0
 103  WTRT     0               0               0               0               0               0               0               0               0               0               0               0               0               210.0505451     0.071912248     
      20.7160657      32.93619703     10.31725385     0
 104  TRKT     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 105  LAB      517.4101164     18.38679406     0.018492817     0.000753382     0.278414531     0.014752894     0.018860624     3.99313E-05     0.008935689     0.006253884     0.012015831     16.79841805     594.8410645     337369.246      115.500681      
      2050.661377     3756.850342     1097.115479     13824.07324
 106  CAP      2015.736568     100.4966796     0.101076169     0.00411776      1.521729987     0.080634874     0.103086492     0.000218252     0.048839788     0.034181845     0.065674914     42.6559267      1075.525715     227216.5396     77.78914459     
      708.45          3027.63         1612.11         3835.18
 107  INDT     101.6595153     4.954560212     0.004983129     0.000203009     0.075022407     0.003975359     0.00508224      1.076E-05       0.002407837     0.00168519      0.003237822     0.795264959     400.1091003     42776.00391     14.64465905     
      125.7218475     206.1458893     28.19690323     335.1819763
 108  HHD1     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 109  HHD2     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 110  HHD3     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 111  HHD4     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 112  HHD5     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 113  HHD6     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 114  HHD7     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 115  HHD8     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 116  HHD9     0               0               0               0               0               0               0               0               0               0               0               0               0               0               0               
      0               0               0               0
 117  FGOV     20.39786339     0               0               0               0               0               0               0               0               0               0               0               0               189.5676592     0.064899792     
      0               0               0               0
 118  SGOV     0               0               0               0               0               0               0               0               0               0               0               0               0               13431.66294     4.598422157     
      411.7244873     4567.88623      99.47229004     0
 119  INV      294.7308978     0               0               0               0               0               0               0               0               0               0               0               0               14045.04835     4.808418872     
      0               0               0               0
 120  FT       990.8085455     1.586845569     0.001595996     6.50195E-05     0.024028162     0.001273227     0.001627739     3.44621E-06     0.000771182     0.000539732     0.001037009     0.058020327     1.455318869     128149.2966     43.87279279     
      0               38.9725879      0.09736569      0
 121  DT       5099.470535     19.26479293     0.019375879     0.000789357     0.29170927      0.015457368     0.019761249     4.1838E-05      0.009362383     0.00168519      0.003237822     96.525402       1818.281275     272344.7934     93.23911256     
      62.54944229     1825.344199     591.157411      258.6427635
 122   
 123  +        LAB             CAP             INDT            HHD1            HHD2            HHD3            HHD4            HHD5            HHD6            HHD7            HHD8
 124  AGR      0               0               0               88.94626708     80.82520854     186.1524391     235.1246616     368.6658278     530.8379478     360.4707113     314.3368628
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                    10/28/14 15:40:09 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 125  EFISH    0               0               0               0               0               0               0               0               0               0               0
 126  AFISH    0               0               0               0               0               0               0               0               0               0               0
 127  WALL     0               0               0               0               0               0               0               0               0               0               0
 128  YPERCH   0               0               0               0               0               0               0               0               0               0               0
 129  WPERCH   0               0               0               0               0               0               0               0               0               0               0
 130  WBASS    0               0               0               0               0               0               0               0               0               0               0
 131  SMELT    0               0               0               0               0               0               0               0               0               0               0
 132  CCAT     0               0               0               0               0               0               0               0               0               0               0
 133  CARP     0               0               0               0               0               0               0               0               0               0               0
 134  BUFF     0               0               0               0               0               0               0               0               0               0               0
 135  POW      0               0               0               0               0               0               0               0               0               0               0
 136  WATR     0               0               0               83.07717133     77.63896179     186.8034363     225.6251678     305.0356445     469.7824707     289.6412048     271.8536682
 137  MISC     0               0               0               12929.44283     10843.02198     27232.73461     33106.26165     55090.72249     90922.5075      63651.2821      59859.39302
 138  RFISH    0               0               0               4.426483652     3.712183127     9.323313937     11.3341563      18.86068763     31.12794559     21.79145407     20.49327477
 139  AIRT     0               0               0               49.23966217     44.51896286     64.27878571     75.91825104     155.1717224     505.9430542     299.2244873     450.0101929
 140  RAILT    0               0               0               1412.407593     581.5584106     552.9788208     811.9799805     903.9946289     1599.834717     935.6091919     1214.244995
 141  WTRT     0               0               0               57.66943359     24.46320915     60.39289856     101.5906372     293.7054138     711.2567139     258.3804932     313.0204163
 142  TRKT     0               0               0               749.3960571     828.6509399     1761.771973     2007.253906     3580.099121     5527.287109     4038.381592     3330.772705
 143  LAB      0               0               0               0               0               0               0               0               0               0               0
 144  CAP      0               0               0               0               0               0               0               0               0               0               0
 145  INDT     0               0               0               0               0               0               0               0               0               0               0
 146  HHD1     1512.698958     302.1655655     0               0               0               0               0               0               0               0               0
 147  HHD2     1895.563511     467.3071021     0               0               0               0               0               0               0               0               0
 148  HHD3     10463.36732     1791.492471     0               0               0               0               0               0               0               0               0
 149  HHD4     18575.72283     2944.803975     0               0               0               0               0               0               0               0               0
 150  HHD5     37953.82785     5777.723573     0               0               0               0               0               0               0               0               0
 151  HHD6     80388.48988     10013.73878     0               0               0               0               0               0               0               0               0
 152  HHD7     56469.3212      8860.194771     0               0               0               0               0               0               0               0               0
 153  HHD8     57218.13771     12594.70968     0               0               0               0               0               0               0               0               0
 154  HHD9     50258.92285     31525.068       0               0               0               0               0               0               0               0               0
 155  FGOV     43461.67383     3925.395049     5430.398457     -65.69166565    -317.7965088    -235.3603516    679.4368286     2701.607178     7710.651855     6847.805664     8577.020508
 156  SGOV     1163.516144     1707.485565     38563.11178     103.9729055     33.52520482     473.2591715     990.4145594     1986.578894     4504.791927     3506.50787      3632.034245
 157  INV      0               149400.1402     0               0               0               0               0               0               0               0               0
 158  FT       0               -25.77843857    0               403.2686533     357.0890063     860.3958277     1013.412104     1764.232112     2796.815262     1987.608353     1850.081026
 159  DT       0               10429.63865     0               -403.2686533    -357.0890063    -860.3958277    -1013.412104    -1764.232112    -2796.815262    -1987.608353    -1850.081026
 160   
 161   
 162  +        HHD9            FGOV            SGOV            INV             FT              DT
 163  AGR      327.7950611     13.47942066     62.83992028     0.066508974     1261.078169     2933.206397
 164  EFISH    0               0               0               0.005491924     38.29254294     47.87458497
 165  AFISH    0               0               0               5.52359E-06     0.038513347     0.048150642
 166  WALL     0               0               0               2.25027E-07     0.001569002     0.001961617
 167  YPERCH   0               0               0               8.31592E-05     0.579829215     0.724921379
 168  WPERCH   0               0               0               4.40652E-06     0.030724541     0.038412822
 169  WBASS    0               0               0               5.63345E-06     0.039279347     0.049108319
 170  SMELT    0               0               0               1.1927E-08      8.31613E-05     0.000103971
 171  CCAT     0               0               0               2.66899E-06     0.018609567     0.023266287
 172  CARP     0               0               0               1.86796E-06     0.013024408     0.016283539
 173  BUFF     0               0               0               3.58899E-06     0.025024304     0.031286201
 174  POW      0               0               0               0               0               60.71953538
 175  WATR     255.8152924     33.024333       469.2478485     0               3.222004175     527.4576447
 176  MISC     66370.79208     22280.67766     99043.38843     110958.8119     89870.10246     281210.6826
 177  RFISH    22.72249701     7.62794319      33.90818501     37.98751216     30.76764749     96.2744107
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                    10/28/14 15:40:09 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 178  AIRT     880.3644409     0               0               0               0               2504.215081
 179  RAILT    1944.467163     264.2676392     506.3787842     0               51.7083931      6045.526602
 180  WTRT     412.119812      13.57161474     115.0080566     0               0               1629.588394
 181  TRKT     3650.925049     8.047743797     48.37116241     0               0.085661426     2368.162562
 182  LAB      0               0               0               0               0               0
 183  CAP      0               0               0               0               0               0
 184  INDT     0               0               0               0               0               0
 185  HHD1     0               82.60401917     11.68649006     13483.82762     0               19.90408502
 186  HHD2     0               101.446167      14.35219574     9696.50776      0               24.94181482
 187  HHD3     0               375.6047974     53.13903809     17471.05454     0               137.6769328
 188  HHD4     0               568.9869995     80.49802399     15830.50871     0               244.4192644
 189  HHD5     0               1020.492798     144.3751984     20008.62592     0               499.3962695
 190  HHD6     0               1664.694702     235.514267      19153.83228     0               1057.751332
 191  HHD7     0               1279.022095     180.9508362     12676.58283     0               743.0230348
 192  HHD8     0               1283.89563      181.6404114     5951.920495     0               752.8759585
 193  HHD9     0               3596.880127     508.8722229     10325.91699     0               661.3066455
 194  FGOV     12548.74219     11473.01196     0               14160.9624      0               0
 195  SGOV     4604.211197     24981.8125      49904.91895     2981.226276     0               0
 196  INV      5859.012052     48058.73967     6057.621533     29224.40267     67419.43373     0
 197  FT       2133.657324     650.3937154     1423.451219     14234.6321      744.8947449     0
 198  DT       -2133.657324    -650.3937154    -1423.451219    24167.05867     0               0
 199  ;
 200   
 201   
 202  parameter
 203          HHXo(c,h)        demand of commodity c by household h
 204          QGOVo(g,c)       amount supplied by government
 205          XGOVo(c,g)       amount consumed by government
 206          HTRNSo(h,g)      government transfers to households
 207          QINVo(c)         inventory available for supply
 208          RENTo(f)         factor rents
 209          HSAVo(h)         household savings
 210          GSAVo(g)         government savings or additions to inventory
 211          INVADJo          inventory adjustments
 212          ITo(c)           firm investments or additions to inventory
 213          HINTINCo(h)      household interest income
 214          ENTAXo(g)        enterprise taxe - goverment tax on inventory
 215          XEo(c,t)         exports to trade partner row
 216          HEXINCo(h,t)     household income from outside
 217          EXOSAVo(t)       exogenous savings to trade partners
 218          QIMPo(t,c)       imports to trade partner row
 219          FACOUTo(t,f)     factor payments out of region
 220          FORSAVo(t,h)     household foreign savings
 221          AIDo(t,g)        government payments to rest of world
 222          EXINTo(t)        interest payments to rest of world
 223          TRDBRWo          transfers from rest of world to rest of world;
 224   
 225          HHXo(c,h)       = sam(c,h);
 226          QGOVo(g,c)      = sam(g,c);
 227          XGOVo(c,g)      = sam(c,g);
 228          HTRNSo(h,g)     = sam(h,g);
 229          QINVo(c)        = sam('inv',c);
 230          RENTo(f)        = sam('inv',f);
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                    10/28/14 15:40:09 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 231          HSAVo(h)        = sam('inv',h);
 232          GSAVo(g)        = sam('inv',g);
 233          INVADJo         = sam('inv','inv');
 234          ITo(c)          = sam(c,'inv');
 235          HINTINCo(h)     = sam(h,'inv');
 236          ENTAXo(g)       = sam(g,'inv');
 237          XEo(c,t)        = sam(c,t);
 238          HEXINCo(h,t)    = sam(h,t);
 239          EXOSAVo(t)      = sam('inv',t);
 240          QIMPo(t,c)      = sam(t,c);
 241          FACOUTo(t,f)    = sam(t,f);
 242          FORSAVo(t,h)    = sam(t,h);
 243          AIDo(t,g)       = sam(t,g);
 244          EXINTo(t)       = sam(t,'inv');
 245          TRDBRWo         = sam('ft','ft');
 246   
 247  *Clearing up busts manually
 248   
 249  XEo('CARP','DT')=XEo('CARP','DT')+ (-0.004867326/2);
 250   
 251  QIMPo('DT','CARP')=QIMPo('DT','CARP')+ 0.004867326/2;
 252   
 253  XEo('BUFF','DT')=XEo('BUFF','DT')+ (-0.009351784
 254  /2);
 255   
 256  QIMPo('DT','BUFF')=QIMPo('DT','BUFF')+ 0.009351784
 257  /2;
 258   
 259   
 260  parameter elast(*) /
 261   
 262           AGR    .8
 263           AFISH  .8
 264           EFISH  .8
 265           WALL   .8
 266           YPERCH .8
 267           WPERCH .8
 268           WBASS  .8
 269           SMELT  .8
 270           CCAT   .8
 271           CARP   .8
 272           BUFF   .8
 273           POW    .8
 274           WATR   .8
 275           MISC   .8
 276           RFISH  .8
 277           AIRT   .8
 278           RAILT  .8
 279           WTRT   .8
 280           TRKT   .8/;
 281   
 282  * to do: use data file to input the following:
 283  parameter scvalues(*)   /
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                    10/28/14 15:40:09 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 284   
 285           AGR    3.15
 286           AFISH  3.15
 287           EFISH  3.15
 288           WALL   3.15
 289           YPERCH 3.15
 290           WPERCH 3.15
 291           WBASS  3.15
 292           SMELT  3.15
 293           CCAT   3.15
 294           CARP   3.15
 295           BUFF   3.15
 296           POW    3.15
 297           WATR   3.15
 298           MISC   3.15
 299           RFISH  3.15
 300           AIRT   3.15
 301           RAILT  3.15
 302           WTRT   3.15
 303           TRKT   3.15/;
 304   
 305  parameter stvalues(*) /
 306   
 307            AGR    2.9
 308            AFISH  2.9
 309            EFISH  2.9
 310            WALL   2.9
 311            YPERCH 2.9
 312            WPERCH 2.9
 313            WBASS  2.9
 314            SMELT  2.9
 315            CCAT   2.9
 316            CARP   2.9
 317            BUFF   2.9
 318            POW    2.9
 319            WATR   2.9
 320            MISC   2.9
 321            RFISH  2.9
 322            AIRT   2.9
 323            RAILT  2.9
 324            WTRT   2.9
 325            TRKT   2.9/;
 326   
      * Original WTP, cactch, and fish per hour from Besedin et al (2004)
      table besedin(*,*)
                      w2p             catch           fph     totdays         weight
      *               ($/fish)        (fish/yr)       (f/h)   (mil days/year) (kg/fish)
        bass          12.86           3048444         0.15    1.7             1.1
        perch         2.47            10808297        0.758   1.8             0.17
        walleye       18.43           1693872         0.081   3.2             1.5
        salmon        20.13           1905185         0.129   6.1             2.7
        other         2.47            28885829        0.337   1.1             1.5
      ;
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                    10/28/14 15:40:09 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


      * other is not used in the model because Besedin find a near zero
      * net welfare gain from `other' fishing trips
       
       
      table bench(*,*)
      * from EwE
                      catch           stck
      *               (tonnes/yr)     (tonnes)
        bass          148             714
        perch         1886            17457
        walleye       2053            22528
        salmon        256             1344
        other         121             30742
      ;
       
       
      parameters population IMPLAN population in Lake Erie geography /15408900/
                 avghhincome(h) average angler income from Besedin
                       /
                       HHD1 39151
                       HHD2 39151
                       HHD3 39151
                       HHD4 39151
                       HHD5 39151
                       HHD6 39151
                       HHD7 39151
                       HHD8 39151
                       HHD9 39151
                       /
                 fishingpop population likely to fish in Lake Erie;
       
      * Assume 20 percent of population fishes
      fishingpop = population * 0.2;
 372   
 373  parameter  sig_f(h)          elasticity of substitution between species
 374                           /
 375                           HHD1 0.9
 376                           HHD2 0.9
 377                           HHD3 0.9
 378                           HHD4 0.9
 379                           HHD5 0.9
 380                           HHD6 0.9
 381                           HHD7 0.9
 382                           HHD8 0.9
 383                           HHD9 0.9
 384                           /;
 385   
 386   
 387  ****************************************************
 388  * CGE MODEL
 389  ****************************************************
 390   
 391  * ---- Prices -------
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                    10/28/14 15:40:09 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 392   
 393  variables PC(c) market clearing Armington goods price
 394            PD(c) domestic goods price
 395            PF(f) factor prices;
 396   
 397  * --- Market clearing ----
 398  * In each goods market, domestic prices adjust such that total supply equals total demand
 399   
 400  variables Q(c) total supply
 401            X(c) total demand;
 402   
 403  * -- FIRMS ----------------------------------
 404   
 405  * 1. Human inputs / Effort
 406   
 407  variables DY(c) total output of firm c
 408            CV(c) total costs of firm c
 409            PI(c) profit of firm c
 410            V(a,c) intermediate inputs of firm a used by c
 411            VA(C) demand for valu-added
 412            FAC(f,c) factor demand of f by c
 413            PVA(a) primry variable cost for value added
 414            TAX(a);
 415   
 416  equations eqDY(a)
 417            eqCV(a)
 418            eqV(c,a)
 419            eqVA(a)
 420            eqFAC(f,a)
 421            EQPVA(a)
 422            eqPD(a)
 423            eqTAX(a);
 424   
 425  parameters
 426          ibtr(a)         business tax rate imposed on industry i
 427          tva(f,a)        calibration parameter for value added
 428          eta(a)          parameter for value added function based on elasticity of substitution
 429          sf(a)            elasticity of substitution between capital and labor
 430          aint(c,a)       share of a's output produced by using c
 431          ava(a)          share of a's output produced using factors
 432   
 433          Vo(c,a)          intermediate demand by industry a of commodity c
 434          VAo(a)          benchmark value added input
 435          DYo(a)          output of local firms
 436          FACo(f,a)       demand of factor f by industry a;
 437   
 438  * benchmark values
 439      Vo(c,a) = sam(c,a);
 440      FACo(f,a) = sam(f,a);
 441      VAo(a)= sum(f,FACo(f,a));
 442      DYo(a) = VAo(a) + sum(c,Vo(c,a)) + sam('indt',a);
 443   
 444  eqTAX(c)..    TAX(c) =e= ibtr(c)*DY(c);
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 445                          ibtr(a) = sam('indt',a)/DYo(a);
 446   
 447  EQCV(a)..     CV(a) =e= sum(c, V(c,a)*PC(c))
 448                                    + (VA(a) * (sum(f$tva(f,a),(PF(f)/tva(f,a))**eta(a)))**(1/eta(a)))$VAo(a)
 449                                    + DY(a)*ibtr(a);
 450                          sf(a) = elast(a);
 451                          eta(a) = 1 - sf(a);
 452                          tva(f,a)$FACo(f,a) = (VAo(a)/FACo(f,a))**(1/eta(a));
 453   
 454  EQV(c,a)..    V(c,a) =e= aint(c,a)*DY(a);
 455                           aint(c,a) = Vo(c,a) / DYo(a);
 456   
 457  EQVA(a)..     VA(a) =e= ava(a)*DY(a);
 458                          ava(a) = VAo(a) / DYo(a);
 459   
 460  EQFAC(f,a)..  FAC(f,a) =e= (VA(a) * (tva(f,a)/PF(f))**sf(a) * 1/(tva(f,a) *
 461                                       sum(ff$tva(ff,a), PF(ff)**(1-sf(a)) * tva(ff,a)**(sf(a)-1))))$FACo(f,a);
 462   
 463  EQPVA(a)..    PVA(a) =e= sum(ff$tva(ff,a), PF(ff)**(1-sf(a)) * tva(ff,a)**(sf(a)-1));
 464   
 465  * 2. Biomass + Human inputs produce fishing
 466   
 467  set walleye(a) /wall/
 468      yp(a) /yperch/
 469      nonreg(a) /
 470           AGR
 471           AFISH
 472           EFISH
 473           WPERCH
 474           WBASS
 475           SMELT
 476           CCAT
 477           CARP
 478           BUFF
 479           POW
 480           WATR
 481           MISC
 482           RFISH
 483           AIRT
 484           RAILT
 485           WTRT
 486           TRKT       /
 487  ;
 488   
 489  variables   TQ(a)      Regional Total Allowable Catch ;
 490   
 491  equations   EQTACW1(walleye)      Total Allowable Catch Equation 1
 492              EQTACW2(walleye)      Total Allowable Catch Equation 2
 493              EQTACW3(walleye)      Total Allowable Catch Equation 3
 494              EQTACW4(walleye)      Total Allowable Catch Equation 3
 495              EQTACYP(yp)      TAC yellow perch;
 496   
 497  Variables DYF(tac), DY(a), EXPENDF(a);
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 498   
 499  Equation  EQCONNECT(tac), EQEXPENDF(a), EQDYF(tac);
 500   
 501  parameter J(a) Shock parameter /
 502   WALL   1
 503   YPERCH 1 / ;
 504   
 505  parameter BIO(a) inition commercial biomass input /
 506           AGR    0
 507           AFISH  0
 508           EFISH  0
 509           WALL     1.738
 510           YPERCH   1.227
 511           WPERCH 0
 512           WBASS  0
 513           SMELT  0
 514           CCAT   0
 515           CARP   0
 516           BUFF   0
 517           POW    0
 518           WATR   0
 519           MISC   0
 520           RFISH  0
 521           AIRT   0
 522           RAILT  0
 523           WTRT   0
 524           TRKT   0 /;
 525   
 526  parameter wally(*) /
 527           AGR    0
 528           AFISH  0
 529           EFISH  0
 530           WALL   1
 531           YPERCH 2
 532           WPERCH 0
 533           WBASS  0
 534           SMELT  0
 535           CCAT   0
 536           CARP   0
 537           BUFF   0
 538           POW    0
 539           WATR   0
 540           MISC   0
 541           RFISH  0
 542           AIRT   0
 543           RAILT  0
 544           WTRT   0
 545           TRKT   0    /;
 546   
 547  Parameter alphaEffort(a)  C-D Parameter for EFfort /
 548           AGR    1
 549           AFISH  1
 550           EFISH  1
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 551           WALL     .462502
 552           YPERCH   .213011
 553           WPERCH 1
 554           WBASS  1
 555           SMELT  1
 556           CCAT   1
 557           CARP   1
 558           BUFF   1
 559           POW    1
 560           WATR   1
 561           MISC   1
 562           RFISH  1
 563           AIRT   1
 564           RAILT  1
 565           WTRT   1
 566           TRKT   1/;
 567   
 568   
 569  Parameter
 570  DYFo(tac)        Domestic harvest (calibrated)
 571  TQoo(tac)         Total allowable catch (calibrated);
 572   
 573  parameter afe(c) Cobb-Douglas Commercial Share Parameters between VA and Biomass;
 574  afe(c) = 0; afe('wall') = 0.65; afe('yperch') = 0.65;
 575   
 576  parameter bfe(c) Cobb-Douglas Commercial Share Parameters between VA and Biomass;
 577  bfe(c) = 0; bfe('wall') = 0.35; bfe('yperch') = 0.35;
 578   
 579  parameter dfe(tac) Share Parameter;
 580  dfe(tac)=(DYo(tac))/(((sum(f, FACo(f,tac)))**afe(tac))*((BIO(tac))**bfe(tac)));
 581   
 582  DYFo(tac) = dfe(tac)*(VAo(tac)**afe(tac))*((J(tac)*BIO(tac))**(bfe(tac)));
 583   
 584  parameter TQo(c) Benchmark TAC Estimated;
 585   
 586  TQo(nonreg) = DYo(nonreg);
 587  TQo(tac)$(((bio(tac))> 2.555710956) and (wally(tac)=1)) = 0.5694*0.35*(bio(tac));
 588  TQo(tac)$((0.987412587<=(bio(tac))) and ((bio(tac))< 1.332556333)and (wally(tac)=1)) = 0.5694*((bio(tac))*(0.02*bio(tac)+.08));
 589  TQo(tac)$((1.332556333<=(J(tac)*bio(tac))) and ((J(tac)*bio(tac))<= 2.555710956)and (wally(tac)=1)) = 0.5694*((J(tac)*bio(tac))*(0.1128*J(tac)*bio(tac)+0.05));
 590  TQo(tac)$(((J(tac)*bio(tac))< 0.987412587) and (wally(tac)=1)) = 0.5694*0.1*J(tac)*bio(tac);
 591  TQo(tac)$(wally(tac)=2) = 0.52678*(0.07837 + 0.09919*J(tac)*bio(tac));
 592   
      -- HOUSEHOLD --------------
       
      Households are heterogenous in preferences and income. Each household maximizes constant elasticity of
      substitution (CES) preferences
       
              U = (theta(agr,h)*HHX(agr,h)**rh(h) + theta(watr,h)*HHX(watr,h)**rh(h))**(1/rh(h))
       
      where rh(h) is a parameter based on the elasticity of substiution rh(h) = 1 - 1/sh(h), subject to a budget
      constraint.
       
              HHI = PD(agr)*HHX(agr,h) + PD(watr)*HHX(watr,h) + household taxes + savings
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


       
      We define ah(c,h) = theta(c,h)**alpha**(1/rh) so the utility function can be written
       
              U = ( sum(c, (alpha(c,h)*HHX(c,h))**rh) )**(1/rh)
       
      The household owns capital and labor which earn prices PF(f) in the marketplace. Earnings from factors are assumed
      to go to factor 'institutions' then distributed to the households based on their share of the factor. The
      household pays taxes to the government and receives transfers from the government. Household disposable income
      is used for consumption. Households save a fixed percentage of pre-tax income.
 615   
 616  parameter
 617          HHIo(h)         household income
 618          HHIDo(h)        household disposable income
 619          HHXo(c,h)       household demand of commodity c
 620          FACPMTo(f)      total payments to factor
 621          thetaf(h,f)     share of factor f owned by household h
 622          sh(h)           household elasticity of substitution taken from the literature
 623          rh(h)           parameter based on sh(h)
 624          ah(c,h)         share of good i in demand function
 625          htr(g,h)        household tax rate
 626          mps(h)          marginal propensity to save
 627          mpsf(t,h)       marginal propensity to save in foreign sources
 628          afout(t,f)      portion of factor payments that leave the country
 629          endow(h,f)       endowment of factor f by household h ;
 630   
 631  parameter fishy(*) /
 632           WALL   1
 633           YPERCH 1 /;
 634   
 635  variables   HHI(h), HHID(h), HTRNS(h,g), HHX(c,h), FACPMT(f);
 636   
 637  equations   EQFACPMT(f), EQHHI(h), EQHHID(h), EQHHX(c,h), EQHHX2(c,h);
 638   
 639  EQFACPMT(f).. FACPMT(f) =e= (sum(ev,FAC(f,ev)*PF(f))+ sum(tac,FAC(f,tac)*PF(f)))*(1-sum(t,afout(t,f)));
 640                              afout(t,f) = FACOUTo(t,f) / sum(a,FACo(f,a));
 641   
 642  EQHHI(h)..    HHI(h) =e= sum(f,thetaf(h,f)*FACPMT(f)) + sum(g,HTRNS(h,g)) + HINTINCo(h)
 643                           + sum(t,HEXINCo(h,t));
 644                           endow(h,f) = sam(h,f);
 645                           FACPMTo(f) = sum(a,FACo(f,a))*(1-sum(t,afout(t,f)));
 646                           thetaf(h,f) = endow(h,f)/FACPMTo(f);
 647   
 648  EQHHID(h)..   HHID(h) =e= HHI(h)*(1-sum(g,htr(g,h)) - mps(h) - sum(t,mpsf(t,h)));
 649                            HHIo(h) = sum(f,thetaf(h,f)*FACPMTo(f)) + sum(g,HTRNSo(h,g)) + HINTINCo(h) + sum(t,HEXINCo(h,t));
 650                            htr(g,h) = sam(g,h)/HHIo(h);
 651                            mps(h) = HSAVo(h)/HHIo(h);
 652                            mpsf(t,h) = FORSAVo(t,h)/HHIo(h);
 653   
 654  EQHHX(c,h)$HHXo(c,h)..  HHX(c,h) =e= (HHID(h) / (PC(c)**sh(h) * (ah(c,h)*((sum(cc$ah(cc,h), PC(cc)**(1-sh(h)) * ah(cc,h)**(sh(h)-1)))**(1/(1-sh(h)))))**(1-sh(h))));
 655                          sh(h) = 0.9;
 656                          HHIDo(h) = HHIo(h)*(1-sum(g,htr(g,h))-mps(h)-sum(t,mpsf(t,h)));
 657                          ah(c,h)$HHXo(c,h) = ((HHXo(c,h)/HHIDo(h))**(1/(sh(h)-1)));
 658                          ah(c,h)$(HHXo(c,h)=0) = 0;
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 659   
 660  EQHHX2(c,h)$(HHXo(c,h)=0)..  HHX(c,h) =e= 0;
 661   
 662  *-----------------------------------------------------Recreational Model ---------------------------------------------------------------*
 663   
 664  * $include recreation.gms
 665   
 666  set s species /smbass, whbass, perch, walleyes, lktrout, rbtrout, lwfish/;
 667  alias (s,ss)
 668   
 669  set d data /w2p, catch, fph, totdays, weight/;
 670   
 671   
 672  parameter
 673  smbasspr small mouth bass relative proportion of bass stock
 674  whbasspr white bass relative proportion of bass stock
 675  lktrpr lake trout relative proportion of trout
 676  rbtrpr rainbot trout relative proportion of trout
 677  ;
 678  smbasspr = 0.057964363/(0.511917007+0.057964363);
 679  whbasspr = 0.511917007/(0.511917007+0.057964363);
 680  lktrpr =0.023179717/(0.023179717+0.09863322);
 681  rbtrpr =0.09863322/(0.023179717+0.09863322);
 682   
 683  * MODIFIED MAY 2014 Original WTP, cactch, and fish per hour from Besedin et al (2004)
 684  table besedina(*,*)
 685                  w2p             catch           fph     totdays      weight
 686  *               ($/fish)        (fish/yr)       (f/h)   (days/year)  (kg/fish)
 687    smbass        12.86           3048444         0.15    3944365       1.1
 688    whbass        12.86           3048444         0.15    3944365       1.1
 689    perch         2.47            10808297        0.758   4094568       0.17
 690    walleyes      18.43           1693872         0.081   4295665       1.5
 691    lktrout       20.13           1905185         0.129   8467817       2.7
 692    rbtrout       20.13           1905185         0.129   8467817       2.7
 693    lwfish        2.47            28885829        0.337   2335586       1.5
 694  ;
 695  * other is not used in the model because Besedin find a near zero
 696  * net welfare gain from `other' fishing trips
 697  Parameter
 698  smbcatch
 699  whbcatch
 700  smbdays
 701  whbdays
 702  lktrcatch
 703  rbtrcatch
 704  lktrdays
 705  rbtrdays
 706  ;
 707  smbcatch= smbasspr*besedina('smbass','catch');
 708  whbcatch= whbasspr*besedina('whbass','catch');
 709  smbdays=  smbasspr*besedina('smbass','totdays');
 710  whbdays=  whbasspr*besedina('whbass','totdays');
 711  lktrcatch=lktrpr*besedina('lktrout','catch');
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 712  rbtrcatch=rbtrpr*besedina('rbtrout','catch');
 713  lktrdays= lktrpr*besedina('lktrout','totdays');
 714  rbtrdays= rbtrpr*besedina('rbtrout','totdays');
 715   
 716  Table besedin(s,d)
 717                  w2p             catch           fph     totdays      weight
 718  *               ($/fish)        (fish/yr)       (f/h)   (days/year)  (kg/fish)
 719    smbass        12.86           310066.4873     0.15    401193.3302  1.1
 720    whbass        12.86           2738377.513     0.15    3543171.67   1.1
 721    perch         2.47            10808297        0.758   4094568      0.17
 722    walleyes      18.43           1693872         0.081   4295665      1.5
 723    lktrout       20.13           362536.6092     0.129   1611336.255  2.7
 724    rbtrout       20.13           1542648.391     0.129   6856480.745  2.7
 725    lwfish        2.47            2888582.9        0.337   2335586     1.5
 726  ;
 727   
 728   
 729  table bench(*,*)
 730  * from EwE
 731                   catch              stck
 732  *               (tonnes/yr)         (tonnes)
 733    smbass         402.2325954        939.4502943
 734    whbass         2859.892628        15827.87386
 735    perch          7991.133923        25842.44079
 736    walleyes       10795.86986        30238.91401
 737    lktrout        72.22422698        672.5452138
 738    rbtrout        601.2337191        1836.367566
 739    lwfish         609.1150537        3095.247805
 740  ;
 741   
 742  parameters population IMPLAN population in Lake Erie geography /420800/
 743             avghhincome average angler income from Besedin /39151/
 744             avhour average hour per trip /3.79/
 745             tripcst trip cost /21.09/
 746             travcst travel cost /31.46/
 747             fishingpop population likely to fish in Lake Erie;
 748   
 749  * Assume 10 percent of population fishes
 750  * fishingpop = population * 0.1;
 751  fishingpop = population;
 752   
 753  positive variables
 754   
 755    WTP(s)         willingness to pay for one fish caught of species s
 756    EFFORT(s)      effort spent fishing for species s
 757    WAGE           time cost (price of effort)
 758    EC(s)          unit cost function
 759    EF             unit expenditure
 760    TRIP(s)        trips per species
 761    PS(s)          trip price by species
 762    PFISH          price of fishing composite
 763    PY             price of composite
 764    FISH           fishing composite
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 765    Y              composite good
 766    E              unit expenditure
 767    INC            gross income
 768    CATCH(s)       catches
 769    NMV(s)         nonmarket value of time spent fishing
 770    TNMV           total nonmarket value from fishing
 771  *  UTIL           indirect utility
 772   
 773  ;
 774  equations
 775   
 776    eq_ec(s)       unit cost function
 777    eq_wtp(s)      wtp determination
 778    eq_effort(s)   demand for days fishing
 779    eq_ef,
 780    eq_trip(s)
 781    eq_ps(s),
 782    eq_pfish,
 783    eq_fish,
 784    eq_y,
 785    eq_e,
 786    eq_inc,
 787    eq_nmv(s),
 788    eq_catch(s),
 789    eq_tnmv
 790  *  eq_util
 791  ;
 792   
 793   
 794  parameters
 795   
 796    sige(s)        elasticity of substitution between effort and stock
 797    betae(s)       share of effort in benchmark
 798    STOCKtb(s)     baseline stock as given
 799    STOCKt(s)      stock as given
 800   
 801  * benchmark data:
 802   
 803    ec0(s)         benchmark unit costs
 804    wtp0(s)        benchmark willingness to pay for species s
 805    stock0(s)      benchmark stock of species s on a per capita basis
 806    catch0(s)      benchmark catch of species s
 807    ps0(s)         benchmark shadow price for stock of species s
 808    wage0          benchmark wage /1/
 809    effort0(s)     benchmark hours fishing
 810    wage0          price of effort
 811    tripcap(s)     benchmark percapita trips
 812    tottrip        benchmark total trips
 813    tripcsts0(s)   benchmark trip costs
 814    travcsts0(s)   benchmark travel costs
 815    tripsum        benchmark trip cost total
 816    travsum        benchmark travel cost total
 817    tripprop       benchmark trip cost proportion of income
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 818    travprop       benchmark travel cost proportion of income
 819    wbartrip0      benchmark trip cost per hour
 820    wbartrav0      benchmark travel cost per hour
 821    mktvaltrip0(s) benchmark market value of trip effort by species
 822    mktvaltrav0(s) benchmark market value of travel effort by species
 823    totmktvaltrip0 benchmark total market value of trip effort
 824    totmktvaltrav0 benchmark total market value of travel effort
 825    nmval0(s)      benchmark nonmarket value of catchable biomass by species
 826    totnmval0      benchmark total nonmarket value
 827    catchprop(s)   benchmark catch per stock
 828    totvalstrip0(s) benchmark total value by species
 829    totvalstrav0(s) benchmark total value by species
 830    totvaltrip0     benchmark total value of fishing inclusive of nmv
 831    totvaltrav0     benchmark total value of fishing inclusive of nmv
 832    theta_f(s)      share of species in benchmark fishing composite
 833    sig_fish        elasticity of substitution between species /0.9/
 834    efbar           benchmark unit expenditure function,
 835    eftst           benchmark test
 836    ps0(s)          benchmark price of trip by species
 837    trip0(s)        benchmark trips by species
 838    theta_u         share of fishing in benchmark
 839    sig_u           elasticity of substitution /0.9/
 840    py0             benchmark consumption price /1/
 841    pf0             benchmark fishing composite price
 842    inc0            benchmark household income + value of fishing
 843    f0              benchmark demand for fishing composite
 844    y0              benchmark consumption composite
 845    ebar            benchmark unit expenditure
 846    vbar            benchmark indirect utility
 847    exc(s)          non-market devaluation
 848  ;
 849   
 850    wtp0(s)    = besedin(s,'w2p');
 851    stock0(s)  = besedin(s,'catch') * (bench(s,'stck')/bench(s,'catch')) / fishingpop;
 852  *  stock0(s)  = bench(s,'stck') / (fishingpop * (bench(s,'totdays')/sum(ss,bench(ss,'totdays'))));
 853    catch0(s)  = besedin(s,'catch') / fishingpop;
 854  *  catch0(s)  = bench(s,'catch') / (fishingpop * (bench(s,'totdays')/sum(ss,bench(ss,'totdays'))));
 855  *  effort0(s) = .2 * ((bench(s,'catch') * 1000000 / bench(s,'weight'))/bench(s,'fph')) / fishingpop;
 856  effort0(s) = catch0(s) / besedin(s,'fph');
 857  tripcap(s) = besedin(s,'totdays')/fishingpop;
 858  tottrip = sum(s,tripcap(s));
 859  tripcsts0(s) = tripcst*tripcap(s);
 860  travcsts0(s) = travcst*tripcap(s);
 861  tripsum  = sum(s, tripcsts0(s));
 862  travsum  = sum(s, travcsts0(s));
 863  tripprop = tripsum/avghhincome;
 864  travprop = travsum/avghhincome;
 865  wbartrip0 =tripcst/avhour;
 866  wbartrav0 =travcst/avhour;
 867  mktvaltrip0(s)= wbartrip0*effort0(s);
 868  mktvaltrav0(s)=wbartrav0*effort0(s);
 869  totmktvaltrip0=sum(s,mktvaltrip0(s));
 870  totmktvaltrav0=sum(s,mktvaltrav0(s));
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 871  catchprop(s)= (bench(s,'catch')/bench(s,'stck'));
 872  nmval0(s) =wtp0(s)*stock0(s)*catchprop(s);
 873  totnmval0=sum(s,nmval0(s));
 874  totvalstrip0(s)= mktvaltrip0(s)+nmval0(s);
 875  totvalstrav0(s)= mktvaltrav0(s)+nmval0(s);
 876  totvaltrip0= sum(s,totvalstrip0(s));
 877  totvaltrav0= sum(s,totvalstrav0(s));
 878   
 879   
 880   
 881   
 882    wage0 = 1;
 883   
 884    sige(s) = .3;
 885  *choosing travel value from here on
 886    betae(s) = mktvaltrav0(s)/totvalstrav0(s);
 887    trip0(s)=travcsts0(s);
 888     ec0(s) =totvalstrav0(s)/trip0(s);
 889    exc(s) = 1/ec0(s);
 890   
 891  Display
 892  sige
 893  betae
 894  wtp0
 895  ec0
 896  exc
 897  ;
 898   
 899    theta_f(s) = travcsts0(s) /travsum ;
 900    efbar=1;
 901    eftst = efbar*((sum(ss,(theta_f(ss)*(wtp0(ss)/wtp0(ss))**(1-sig_fish))))**(1/(1-sig_fish)));
 902    ps0(s)=ec0(s)*exc(s);
 903  *  trip0(s)=mktvaltrav0(s);
 904  *  catchtst(s) = catch0(s)*((wtp0(s)/wtp0(s))**(-sig_fish))*((eftst/efbar)**(sig_fish-1))*(totvaltrav0/totvaltrav0);
 905   
 906   
 907  Display
 908  theta_f
 909  eftst
 910  ps0
 911  trip0
 912  *catchtst
 913  ;
 914   
 915    pf0= efbar;
 916    f0 = travsum;
 917    y0 = avghhincome-travsum;
 918    inc0 = sum(h,HHIDo(h));
 919    theta_u  = travsum/inc0;
 920    ebar=1;
 921    vbar=inc0/ebar;
 922   
 923    STOCKt(s)= stock0(s);
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 924   
 925   
 926  display wbartrav0;
 927   
 928  * -- NOTE: changed this
 929  eq_ec(s) .. EC(s) =e= ec0(s)*(betae(s)*((PF('lab')*wbartrav0/wbartrav0)**(1-sige(s)))+(1-betae(s))*((WTP(s)/wtp0(s))**(1-sige(s))))**(1/(1-sige(s)));
 930  *the totvalstrav0(s) in the last bracket numerator will have to be replaced with PS(s)*FS(s) etc
 931   
 932  eq_wtp(s).. STOCKt(s)*catchprop(s)=e=stock0(s)*catchprop(s)*(((EC(s)*wtp0(s))/(ec0(s)*WTP(s)))**(sige(s)))*(TRIP(s)/trip0(s));
 933   
 934  * -- NOTE:changed this
 935  eq_effort(s)..  EFFORT(s) =e= effort0(s)*(((EC(s)*1)/(ec0(s)*PF('lab')))**(sige(s)))*(TRIP(s)/trip0(s));
 936  *(((EC(s)*wbartrav0)/ex0)**(sige(s)))*((WAGE/wbartrav0)**(-sige(s)))*((TRIP(s)*PS(s)+WTP(s)*STOCKt(s)*catchprop(s))/totvalstrav0(s));;
 937   
 938  * -- 2. Given the willingness to pay for each species and effort directed at each, the representative agent
 939  *    maximizes the utility from trips fishing for each species
 940  * --NOTE trips here are in value terms, and this value includes NMV
 941   
 942   
 943    eq_ef .. EF =e= efbar*((sum(ss,(theta_f(ss)*(PS(ss)/ps0(ss))**(1-sig_fish))))**(1/(1-sig_fish)));
 944  *totvaltrav0 below will have to be updated to be the value of fishing composite from next nest
 945   
 946  display travsum;
 947   
 948    eq_trip(s) .. TRIP(s) =e=  trip0(s)*((PS(s)/ps0(s))**(-sig_fish))*((ef/efbar)**(sig_fish-1))*((PFISH*FISH)/travsum);
 949    eq_ps(s) .. PS(s) =e= EC(s)*exc(s);
 950   
 951  *  eq_vf .. vf =e= (sum(s,((theta_f(s)*((efbar/WTP(s))**(1-sig_fish)))**(1/sig_fish))*((CATCH(s))**((sig_fish-1)/sig_fish))))**(sig_fish/(sig_fish-1));
 952  *  eq_incf .. incf =e=vf*ef;
 953   
 954  * -- 3. choice between fishing trips and other goods
 955   
 956  * Think I have a problem with income as the wtp is sky rocketing making the TNMV fly up and this is artificially increasing income - the individual however should be more constrained!!
 957  eq_PFISH .. PFISH =e= EF;
 958   
 959  eq_e .. E =e= ebar*(theta_u*((PFISH/efbar)**(1-sig_u))+(1-theta_u)*((PY/py0)**(1-sig_u)))**(1/(1-sig_u));
 960   
 961  eq_fish .. FISH =e= f0*((E/ebar)**(sig_u-1))*((PFISH/efbar)**(-sig_u))*(INC/inc0);
 962   
 963  * eq_y .. Y =e= y0*((E/ebar)**(sig_u-1))*((PY/py0)**(-sig_u))*(INC/inc0);
 964   
 965  eq_catch(s) ..  CATCH(s) =e=EFFORT(s)*besedin(s,'fph');
 966   
 967  eq_nmv(s) .. NMV(s) =e= WTP(s)*EFFORT(s)*besedin(s,'fph');
 968   
 969  eq_tnmv .. TNMV =e=sum(s,  NMV(s));
 970   
 971  eq_inc .. INC =e= sum(h, HHID(h));
 972   
 973   
 974   
 975  equation eq_py;
 976   
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


 977    eq_py .. PY =e= ((sum(cc$ah(cc,'hhd1'), PC(cc)**(1-sh('hhd1')) * ah(cc,'hhd1')**(sh('hhd1')-1)))**(1/(1-sh('hhd1'))));
 978   
      -- SAVINGS AND INVESTMENT
       
      Savings and investment are represented by the 'inv' entries in the SAM. Reading across the 'inv' row,
      inventory is available to be added to the total supply pool, factors earn rents or profits that are added
      to the total amount of investments available, and households and governments save. The (inv,inv) entry in
      the SAM represents inventory or investment adjustments but does have a large role to play in the model.
      Reading down the 'inv' column, a portion of total output is added to inventory or IT investments, households
      earn interest income from investments, governments levy an enterprise tax on investments and inventories, and
      again are inventory adjustments.
       
      Agents' behavior with regard to investments, inventory, and savings are assumed to by myopic. That is, they
      occur as fixed portions of some other economic activity and not as results of optimization problems. This has
      modeling implications which one may want to change depending on the problem of interest. For example, households
      save a fixed percentage of total income, not after-tax income. Any affect changes in tax rates have on household
      savings behavior will not be captured by this model. One the other hand, increases in government transfers to
      housholds increase total income, of which a certain percentage of is saved. Because of the difference in effects
      of the two government actions, this may be a worthy change for future models (one that would require more
      background reading on influence of taxes on household behavior).
       
      Government additions to inventory are assume to be fixed.
       
      There are trade entries in the 'inv' column and row of the SAM corresponding to exogenous savings and interest
      payments to the rest of the world. These are fixed in the model and so will not play a part in this section.
      It should be noted that these also do not play a role in the goverments' tax rates for enterprise taxes.
       
      Because savings and investment decisions are based on total levels of economic activity, those levels are first
      determined
1008   
1009  parameter
1010          QDo(c)         domestically supplied goods
1011          armd(c)        calibrated Armington coefficient for domestic good
1012          armf(t,c)      calibrated Armington coefficient for foreign goods
1013          AC(c)          calibrated Armington coefficient
1014          rc(c)          parameter for Armington mix based on elasticity of substitution
1015          sc(c)          elasticity of substitution between domestic and foreign goods;
1016   
1017          sc(c)      = scvalues(c);
1018   
1019  parameter
1020          XDo(c)         domestically demanded goods
1021          cetd(c)        calibrated CET share parameter for domestic demand
1022          cetf(c,t)      calibrated CET share parameter for trade partners
1023          AT(c)          calibrated CET efficiency parameter
1024          rt(c)          parameter for CET based on elasticity of substitution
1025          st(c)          elasticity of substitution between domestic and foreign consumption goods;
1026   
1027          st(c)       = stvalues(c);
1028   
1029  parameters       Qo(c)           total supply
1030                   Xo(c)           total demand;
1031   
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1032  parameters
1033          ainv(c)         share of total supply represented by inventory
1034          arent(f)        portion of factors that go to rents
1035          ait(c)          share of output that goes to IT
1036          entaxr(g)       goverment enterprise tax rate;
1037   
1038          Qo(c)           = sum(a$(ord(a)=ord(c)),DYo(a)) + sum(g,sam(g,c)) + QINVo(c) + sum(t,QIMPo(t,c));
1039          Xo(c)           = sum(a,Vo(c,a)) + sum(h,HHXo(c,h)) + sum(g,sam(c,g)) + ITo(c) + sum(t,XEo(c,t));
1040   
1041   
1042  equations EQQINV(c), EQIT(c), EQRENT(f);
1043  variables QINV(c), IT(c), RENT(f);
1044   
1045       EQQINV(c)..   QINV(c) =e= ainv(c) * Q(c);
1046                                 ainv(c) = QINVo(c)/Qo(c);
1047   
1048       EQIT(c)..     IT(c) =e= ait(c) * X(c);
1049                               ait(c) = ITo(c)/Xo(c);
1050   
1051       EQRENT(f)..   RENT(f) =e= arent(f) * FACPMT(f);
1052                                 arent(f) = RENTo(f)/FACPMTo(f);
       
      -- GOVERNMENT
       
      The government taxes final goods and factors of production, provides goods in some industries, and consumes
      goods from some inustries. All its actions are myopic and occur as some fixed portion of other quantities in
      the model. Government supply QGOV(i) is a constant proportion of total domestic supply, government demand is
      a fixed proportion of total domestic demand, and the tax rates are fixed.
       
      The SAM does not distinguish between business taxes distributed to the various levels of government but does
      spread the business taxes to various levels of government, implying different tax rates for different levels
      of government. We could distribute the revenues according to the share represented in this column. Instead we
      assume that after all business taxes are collected, they are distributed to the levels of goverment based on
      the shares in the IBT column. Because the SAM is linear, this method is akin to explicitly stating separate
      tax rates but has the advantage of being more reflective of the SAM and more straightforward for analysis.
       
      Government to government transfers are also allowed.
       
      The government maintains a balanced budget such that BRW = Government Revenues - Government Expenses = 0;
       
1074   
1075  parameters
1076          ags(g,c)        share of good i supplied by government
1077          agx(c,g)        share of good i consumed by government
1078          ftr(g,f)        factor tax rate
1079          aibt(g)         share of bussiness taxes to government agents
1080          gmps(g)         government marginal propensity to save
1081          GGo(g,gg)       government to government transfers
1082          GREVo(g)        government revenues
1083          BRWo(g)         net government borrowing -- deficit minus aid for all trade partners;
1084   
1085          ftr(g,f)        = sam(g,f)/FACPMTo(f);
1086   
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1087          ags(g,c)        = QGOVo(g,c)/Qo(c);
1088          agx(c,g)        = XGOVo(c,g)/Xo(c);
1089   
1090          QGOVo(g,c)      = ags(g,c) * Qo(c);
1091          XGOVo(c,g)      = agx(c,g) * Xo(c);
1092   
1093          aibt(g)         = sam(g,'indt')/sum(gg,sam(gg,'indt'));
1094   
1095          GGo(g,gg)       = sam(g,gg);
1096   
1097          entaxr(g)       = ENTAXo(g) / (sum(c,QINVo(c)) + sum(f,RENTo(f)) + sum(h,HSAVo(h))
1098                            + sum(gg,GSAVo(gg)) + INVADJo);
1099   
1100          GREVo(g)        = sum(c,QGOVo(g,c)*1) + aibt(g)*sum(a,ibtr(a)*DYo(a)) + sum(h,HHIo(h)*htr(g,h))
1101                            + sum(gg,GGo(g,gg)) + sum(f,FACPMTo(f)*ftr(g,f))
1102                            + entaxr(g)* (sum(c,QINVo(c)) + sum(f,RENTo(f)) + sum(h,HSAVo(h)) + sum(gg,GSAVo(gg))
1103                            + INVADJo);
1104   
1105          gmps(g)         = GSAVo(g)/GREVo(g);
1106   
1107          BRWo(g)         = sum(c,XGOVo(c,g)*1) + sum(h,HTRNSo(h,g)) + sum(gg,GGo(gg,g)) + GSAVo(g) - GREVo(g);
1108   
1109  variables        QGOV(g,c), XGOV(c,g), BRW(g), GREV(g), GSAV(g);
1110                   HTRNS.fx(h,g) = HTRNSo(h,g);
1111   
1112  equations        EQQGOV(g,c), EQXGOV(c,g), EQBRW(g), EQGREV(g), EQGSAV(g);
1113   
1114       EQQGOV(g,c)..   QGOV(g,c) =e= ags(g,c)*Q(c);
1115   
1116       EQXGOV(c,g)..   XGOV(c,g) =e= agx(c,g)*X(c);
1117   
1118       EQGSAV(g)..     GSAV(g) =e= gmps(g)*GREV(g);
1119   
1120       EQGREV(g)..     GREV(g) =e= sum(c,QGOV(g,c)*1) + sum(a,aibt(g)*ibtr(a)*DY(a))
1121                                      + sum(h,HHI(h)*htr(g,h)) + sum(gg,GGo(g,gg)) + sum(f,FACPMT(f)*ftr(g,f))
1122                                      + entaxr(g)* (sum(c,QINV(c)) + sum(f,RENT(f)) + sum(h,HHI(h)*mps(h))
1123                                      + sum(gg,GSAV(gg)) + INVADJo);
1124   
1125       EQBRW(g)..      BRW(g) =e= sum(c,PC(c)*XGOV(c,g)) + sum(h,HTRNS(h,g)) + sum(gg,GGo(gg,g))
1126                                     + GSAV(g) - GREV(g);
1127   
1128   
       
      -- TRADE ---------------
       
      Total supply is made up of imports and exports determined by Armington assumptions. The decision is made by minimizing cost of obtaining the good subject
      to CES preferences for domestic and foreign goods. Let total supply of the commodity be given by
       
              Q = AC*(arm*QD**rc + (1-arm)*QIMP**rc)**1/rc
       
      By rewriting
       
              Astar = A/AC = (arm1*Q1**rc + arm2*Q2**rc + .. armN*QN**rc)**1/rc
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


       
      we can use a similar calibration as found in the demand section for N trading partners. Exports are determined in a similiar manner.
1144   
1145  variables PM(c) import and export price for good c
1146            QIMP(t,c) imports
1147            QD(c) domestic supply
1148            XE(c,t) exports to trade partner t
1149            XD(c) domestic demand;
1150   
1151  * The international price is set as our numeraire
1152      PM.fx(c)=1;
1153   
1154          QDo(c)     = sum(a$(ord(a)=ord(c)),DYo(a)) + sum(g,QGOVo(g,c)) + QINVo(c);
1155   
1156          XDo(c)      = sum(a,Vo(c,a)) + sum(h,HHXo(c,h)) + sum(g,XGOVo(c,g)) + ITo(c);
1157          rt(c)       = 1 - 1/st(c);
1158   
1159          AT(c)       = 1;
1160   
1161          cetd(c)     = ((Xo(c) /XDo(c)    )**(rt(c)/(1-st(c))));
1162          cetf(c,t)   = ((Xo(c) /XEo(c,t))**(rt(c)/(1-st(c))))$XEo(c,t);
1163   
1164  equations EQQD(c), EQQIMP(t,c), EQX(c), EQXE(c,t);
1165   
1166  EQQIMP(t,c)..   QIMP(t,c) =e= (armf(t,c)/PM(c))**sc(c) * (Q(c)/AC(c)) / (PD(c)*(armd(c)/PD(c))**sc(c)
1167                                      + sum(tt,PM(c)*(armf(tt,c)/PM(c))**sc(c)));
1168                                      rc(c) = 1 - 1/sc(c);
1169                                      armd(c)    = ((Qo(c) /QDo(c)    )**(rc(c)/(1-sc(c))))$QDo(c);
1170                                      armf(t,c)  = ((Qo(c)/QIMPo(t,c))**(rc(c)/(1-sc(c))))$QIMPo(t,c);
1171   
1172  EQQD(c)..        Q(c)=e= AC(c) * (armd(c)*QD(c)**rc(c) + sum(t,armf(t,c)*QIMP(t,c)**rc(c)))**(1/rc(c));
1173                          AC(c) = 1;
1174   
1175          EQXE(c,t).. XE(c,t) =e= (cetf(c,t)/PM(c))**st(c) * (X(c)/AT(c)) / (PD(c)*(cetd(c)/PD(c))**st(c)
1176                                      + sum(tt,PM(c)*(cetf(c,tt)/PM(c))**st(c)));
1177   
1178          EQX(c)..  X(c) =e= AT(c) * (cetd(c)*XD(c)**rt(c) + sum(t,cetf(c,t)*XE(c,t)**rt(c)))**(1/rt(c));
1179   
1180  *      eqXE(c,t)..     XE(c,t) =e= XEo(c,t)*(PM(c)/PD(c))**st(c);
1181   
1182  *      eqX(c)..        X(c) =e= XD(c) + sum(t,XE(c,t));
1183   
      -- EQUILIBRIUM ---------
       
      Domestic prices PD(i) adjust until total supply Q(i) equals total demand X(i). Firms are the only supplier;
      demand consists of demand for intermediate inputs for production and household consumption. The firm is also
      assumed to have zero profits. Prices of factors PF(f) adjust until supply of factors equals demand.
       
      Key to equilibrium in a CGE model is the idea of closure. Closure refers to parts of the model that are held
      constant that other variables adjust to in the model, much like a numeraire. For example, our treatment of
      savings uses marginal propensity to save for households, firms, and government. This 'closes' the amount of
      savings in the model. An alternative savings closure would involve fixing the interest rate. Factor markets
      are closed in the model by specifying a fixed supply. The price factors earn in the market adjusts so factor
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


      demand equals the inelastic supply.
       
      With the introduction of trade, special attention should be paid to closure rules with the outside world. The
      factor markets are closed by specifying a fixed percentage of factor payments that go to the rest of the world.
      Similarly, household were assumed to have fixed marginal propensities to save in foreign markets and received
      fixed amounts of income from the rest of the world. Because all other government behaviors are fixed percentages
      of other economic activity, net government borrowing adjusts to maintain the government balanced budget
      constraint and close the government accounts. Import prices are assumed to be constant (thus the exchange rate
      is flexible), around which imports and exports adjust to maintain balanced capital accounts through Armington
      assumptions.
1207   
1208  equations eqQ(c), EQXD(c), EQPC(c), eqPD(a), EQPDF(tac), EQPROF(tac),  EQPDT(tac) ;
1209   
1210  EQPD(a).. PI(a) =e= CV(a) - DY(a)*PD(a);
1211             PI.fx(a) = 0;
1212   
1213   
1214  equations eqPC(c) goods market clearing conditions determine domestic prices;
1215   
1216  eqQ(c).. Q(c) =e= X(c);
1217   
1218  eqDY(c).. QD(c) =e= DY(c) + sum(g,QGOV(g,c)) + QINV(c);
1219   
1220  EQXD(c).. XD(c) =e= sum(h,HHX(c,h)) + sum(a,V(c,a)) + sum(g,XGOV(c,g)) + IT(c);
1221   
1222  EQPDT(tac).. PC(tac)*Q(tac) =e= PD(tac)*QD(tac) + PM(tac)*(sum(t,QIMP(t,tac)));
1223   
1224  eqPC(c).. PC(c)*Q(c) =e= PD(c)*QD(c) + sum(t,PM(c)*QIMP(t,c));
1225   
1226  * eqDY(c)..     DY(c) =e= sum(a,V(a,c)) + VA(c) + TAX(c);
1227   
1228  * eqDY(a).. DY(a) =e= alphaeffort(a) * PD(a) * TQ(a) / EXPENDF(a);
1229   
1230  * EQEXPENDF(a)..  EXPENDF(a) =e= ava(a)*PVA(a) + sum(c, aint(c,a)*PC(c)) + ibtr(a);
1231   
1232   
1233  * Equilibrium
1234  equations EQPF(f);
1235   
1236  EQPF(f)..        sum(a,FACo(f,a)) =e= sum(a,FAC(f,a));
1237   
1238  * ---- Initialize variables -----------------------------------
1239   
1240   
1241  parameters CVo(a)          total costs;
1242   
1243  CVo(a) = sum(c,aint(c,a)*DYo(a)) + (VAo(a)*
1244           (sum(f$tva(f,a),(1/tva(f,a))**eta(a)))**(1/eta(a)))$VAo(a) + ibtr(a)*DYo(a);
1245   
1246          HHI.l(h) = HHIo(h);        HHID.l(h) = HHIDo(h);     HHX.l(c,h) = HHXo(c,h);       CV.l(a) = CVo(a);
1247          V.l(c,a) = Vo(c,a);        VA.l(a) = VAo(a);         DY.l(a) = DYo(a);             DYF.l(tac) = DYFo(tac);  Q.l(c) = Qo(c);
1248          X.l(c) = Xo(c);            PD.l(a) = 1;              PF.l(f) = 1;                  FAC.l(f,a) = FACo(f,a);
1249          PC.l(c)=1;                 FACPMT.l(f) = FACPMTo(f); QGOV.l(g,c)=QGOVo(g,c);
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1250          XGOV.l(c,g) = XGOVo(c,g);  BRW.l(g)=BRWo(g);
1251          QINV.l(c)=QINVo(c);        IT.l(c)=ITo(c);           RENT.l(f)=RENTo(f);           GREV.l(g)=GREVo(g);
1252          GSAV.l(g)=GSAVo(g);        QD.l(c)=QDo(c);           QIMP.l(t,c)=QIMPo(t,c);       XD.l(c)=XDo(c);
1253          XE.l(c,t)=XEo(c,t);        TQ.l(a) =TQo(a);
1254   
1255          TAX.l(c) = sam('indt',c);
1256          CATCH.l(s) = catch0(s);
1257          WTP.l(s) = wtp0(s);
1258          PS.l(s) = ps0(s);
1259          EFFORT.l(s) = effort0(s);
1260          PFish.l = 1;
1261          EXPENDF.l(a) = 1;
1262   
1263  * STOCK.l(s) = STOCK0(s);
1264  *  COST.l(s,h) = cost0(s,h);
1265  *  WAGE.fx(h) = wage0(h);
1266  *  XF.l(h) = HHXo('rfish',h);
1267  *  UTILF.l(h) = 1;
1268  *  INCF.l(h) = INCF0(h);
1269   
1270  parameter INCo;
1271  INCo = sum(h, HHIDo(h));
1272  E.l=ebar;
1273  CATCH.l(s)= effort0(s)*besedin(s,'fph');
1274  NMV.l(s) = wtp0(s)*effort0(s)*besedin(s,'fph');
1275  TNMV.l=sum(s,wtp0(s)*effort0(s)*besedin(s,'fph'));
1276  INC.l= INCo;
1277  *util.l=vbar;
1278  EC.l(s)=ec0(s);
1279  EFFORT.l(s)=effort0(s);
1280  WTP.l(s)= wtp0(s);
1281  WAGE.fx = wbartrav0;
1282  EF.l= efbar;
1283  TRIP.l(s)=trip0(s);
1284  PS.l(s)=ps0(s);
1285   
1286  PY.l = ((sum((cc)$ah(cc,'hhd1'), 1**(1-sh('hhd1')) * ah(cc,'hhd1')**(sh('hhd1')-1)))**(1/(1-sh('hhd1'))));
1287  FISH.l = f0;
1288  PVA.l(a) = 1;
1289   
1290   
1291   
1292  model   cge /
1293          EQFACPMT.FACPMT
1294          EQHHI.HHI
1295          EQHHID.HHID
1296          EQHHX.HHX
1297          EQV.V
1298          EQVA.VA
1299          EQFAC.FAC
1300          EQCV.CV
1301          eqTAX.TAX
1302          EQDY.DY
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1303          EQQ.Q
1304          EQX.X
1305          EQPD.PD
1306          EQPF.PF
1307          eqPVA.PVA
1308  *         eqTQ.TQ
1309   
1310          EQQGOV.QGOV
1311          EQXGOV.XGOV
1312          EQBRW.BRW
1313          EQQINV.QINV
1314          EQIT.IT
1315          EQRENT.RENT
1316          EQGREV.GREV
1317          EQGSAV.GSAV
1318          EQQD.QD
1319          EQQIMP.QIMP
1320          EQXD.XD
1321          EQXE.XE
1322          eqPC.PC
1323          EQHHX2.HHX
1324  *        EQEXPENDF.EXPENDF
1325  *        EQTACW1.DY
1326  *        EQTACW2.DY
1327  *        EQTACW3.DY
1328  *        EQTACW4.DY
1329  *        EQTACYP.DY
1330  *        EQPDT.pd
1331          eq_ec.ec
1332          eq_wtp.wtp
1333          eq_effort.effort
1334          eq_ef.ef
1335          eq_trip.trip
1336          eq_ps.ps
1337          eq_pfish.pfish
1338          eq_fish.FISH
1339          eq_e.e
1340          eq_nmv.nmv
1341          eq_catch.catch
1342          eq_tnmv.tnmv
1343          eq_py.py
1344  *       eq_y,
1345          eq_inc.INC
1346  /;
1347   
1348  * replicate benchmark
1349   
1350      options iterlim = 0;
1351      solve cge using mcp;
1352   
1353  * -------- Counterfactuals ----------------------------------------------
1354   
1355  options iterlim = 9999;
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1356  solve cge using mcp;
1357   
1358  parameter tq2dy(a);
1359   
1360  tq2dy(a) = DYo(a) / TQo(a);
1361   
1362   
1363   
1364   
1365  * Interactions with EwE
1366   
1367  parameter ewe(*) percent change in biomass from EwE
1368  /
INCLUDE    C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\EwEScenarios\model_linking_files\run1_2014_10_28_at_15_40_08\year2\stock_in.txt
1370  WAE_Y 0.9945423437
1371  WAE_A 1.0012125878
1372  YEP_A 1.0008917215
1373  RAT_A 1.002023388
1374  LWF 0.9997163385
1375  BUT 1.0000155599
1376  WHP 0.9994182881
1377  WHB 0.9997481699
1378  SMB 1.0015795178
1379  LKT 1.0006962666
1380  RAS 0.9898448036
1381  SUK 0.9993292671
1382  CAT 1.0003514697
1383  PanF 0.9984436898
1384  /;
1385   
1386  display ewe;
1387   
1388  * set shock to rec and commercial
1389   
1390  j(a) = 1;
1391  j('wall') = ewe('WY-2');
****                       $116
**** LINE   1377 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1392  j('yperch')= ewe('YP-2');
****                        $116
**** LINE   1378 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1393  j('wperch') = ewe('WP');
****                       $116
**** LINE   1379 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1394  j('wbass') = ewe('WB');
****                      $116
**** LINE   1380 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1395   
1396  *** TAC ---
1397   
1398  stockt('walleyes') = ewe('WY-2');
1399  stockt('perch') = ewe('YP-2');
1400  stockt('whbass') = ewe('WB');
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1401  stockt('smbass') = ewe('SB');
****                            $116
**** LINE   1387 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1402  stockt('lktrout') = ewe('LT');
****                             $116
**** LINE   1388 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1403  stockt('rbtrout') = ewe('RS');
****                             $116
**** LINE   1389 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1404  stockt('lwfish') = ewe('LW');
****                            $116
**** LINE   1390 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1405   
1406   
1407  DY.up('wall')$((J('wall')*bio('wall')> 2.555710956) and (wally('wall')=1)) = tq2dy('wall') / (  0.5694*0.35*(J('wall')*bio('wall'))  );
1408   
1409  DY.up('wall')$((0.987412587<=J('wall')*bio('wall')) and (J('wall')*bio('wall')< 1.332556333)and (wally('wall')=1))
1410                             = tq2dy('wall') / (  0.5694*((J('wall')*bio('wall'))*(0.02*(J('wall')*bio('wall'))+.08))  );
1411   
1412  DY.up('wall')$((1.332556333<=J('wall')*bio('wall')) and (J('wall')*bio('wall')<= 2.555710956)and (wally('wall')=1))
1413                  = tq2dy('wall') / (  0.5694*((J('wall')*bio('wall'))*(0.1128*(J('wall')*bio('wall'))+0.05))  );
1414   
1415  DY.up('wall')$((J('wall')*bio('wall')< 0.987412587) and (wally('wall')=1)) = tq2dy('wall') / (  0.5694*0.1*(J('wall')*bio('wall'))  );
1416   
1417  DY.up('yperch')$(wally('yperch')=2) = tq2dy('yperch') / (  0.52678*(0.07837 + 0.09919*(J('yperch')*bio('yperch')))  );
1418   
1419   
1420   
1421   
1422  *DY.fx(walleye)$((J(walleye)*bio(walleye)> 2.555710956) and (wally(walleye)=1)) = tq2dy(walleye) / (  0.5694*0.35*(J(walleye)*bio(walleye))  );
1423   
1424  *DY.fx(walleye)$((0.987412587<=J(walleye)*bio(walleye)) and (J(walleye)*bio(walleye)< 1.332556333)and (wally(walleye)=1))
1425  *                           = tq2dy(walleye) / (  0.5694*((J(walleye)*bio(walleye))*(0.02*(J(walleye)*bio(walleye))+.08))  );
1426   
1427  *DY.fx(walleye)$((1.332556333<=J(walleye)*bio(walleye)) and (J(walleye)*bio(walleye)<= 2.555710956)and (wally(walleye)=1))
1428  *                = tq2dy(walleye) / (  0.5694*((J(walleye)*bio(walleye))*(0.1128*(J(walleye)*bio(walleye))+0.05))  );
1429   
1430  *DY.fx(walleye)$((J(walleye)*bio(walleye)< 0.987412587) and (wally(walleye)=1)) = tq2dy(walleye) / (  0.5694*0.1*(J(walleye)*bio(walleye))  );
1431   
1432  *DY.fx(yp)$(wally(yp)=2) = tq2dy(yp) / (  0.52678*(0.07837 + 0.09919*(J(yp)*bio(yp)))  );
1433   
1434  * ---------------
1435   
1436   
1437   
1438  solve cge using mcp;
****                     $257
**** LINE   1424 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1439   
1440  * write catch to text file to be used by EwE
1441   
1442  parameter deltacatch(*) percent change in total catch;
1443   
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1444  deltacatch('walleyes') = ( (0.07/(0.07+0.09)) * CATCH.l('walleyes') + (0.09/(0.07+0.09)) * DY.l('wall')) / ((0.07/(0.07+0.09)) * CATCH0('walleyes') + (0.09/(0.07+0.09)) * DYo('wall'));
1445  deltacatch('yperch') = ((0.07/(0.07+0.11)) * CATCH.l('perch') + (0.11/(0.07+0.11)) *DY.l('yperch')) / ((0.07/(0.07+0.11)) * CATCH0('perch') + (0.11/(0.07+0.11)) *DYo('yperch'));
1446  deltacatch('salmon') = 1;
1447  * CATCH.l('salmon') / CATCH0('salmon');
1448  deltacatch('bass') = 1;
1449  * CATCH.l('bass') / CATCH0('bass');
1450   
1451  deltacatch('smelt') = DY.l('smelt') / DYo('smelt');
1452  deltacatch('wperch') = DY.l('wperch') / DYo('wperch');
1453  deltacatch('ccat') = DY.l('ccat') / DYo('ccat');
1454   
1455   
1456  file catch_out /catch_out.txt/;
1457  catch_out.pc = 4; catch_out.nd = 5;
1458  put catch_out;
1459   
1460  put "ModelStatus", cge.modelstat:2:0/;
1461  put "SolverStatus", cge.solvestat:2:0/;
1462  put 'WY-1',    ewe('WY-1') /;
****                          $116
**** LINE   1448 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1463  put 'WY-2',    deltacatch('walleyes') /;
1464  put 'YP-2',    deltacatch('yperch') /;
1465  put 'LW',      ewe('LW') /;
1466  put 'WB',      ewe('WB') /;
1467  put 'WP',      ewe('WP') /;
1468  put 'BB',      ewe('BB') /;
****                        $116
**** LINE   1454 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1469  put 'RS',      ewe('RS') /;
1470  put 'SB',      ewe('SB') /;
1471  put 'RT',      deltacatch('salmon') /;
1472  put 'LT',      ewe('LT') /;
1473  put 'SUCKER',  ewe('SUCKER') /;
****                            $116
**** LINE   1459 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1474  put 'CATFISH', ewe('CATFISH') /;
****                             $116
**** LINE   1460 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1475  put 'PANFISH', ewe('PANFISH') /;
****                             $116
**** LINE   1461 INPUT       C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
1476   
1477  putclose catch_out;
1478   
1479  file econ_out /econ_out.txt/;
1480  econ_out.pc = 4; econ_out.nd = 5;
1481  put econ_out;
1482   
1483  loop(c, put 'Price', c.tl, PD.l(c) /;);
1484  loop(c, put 'DY', c.tl, DY.l(c) /;);
1485   
1486  putclose econ_out;
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


1487   
1488   
1489   
EXIT C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms

**** LIST OF STRAY NAMES - CHECK DECLARATIONS FOR SPURIOUS COMMAS
**** STRAY NAME eq_y OF TYPE EQU  
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Error Messages


116  Label is unknown
257  Solve statement not checked because of previous errors

**** 14 ERROR(S)   0 WARNING(S)
GAMS 24.1.3  r41464 Released Jul 26, 2013 WEX-WEI x86_64/MS Windows                                                                                                                                                                   10/28/14 15:40:09 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
     2     1369 INCLUDE        1    1369  .C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\EwEScenarios\model_linking_files\run1_2014_10_28_at_15_40_08\year2\stock_in.txt
     3     1490 EXIT           1    1476  C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms


COMPILATION TIME     =        0.078 SECONDS      3 MB  24.1.3 r41464 WEX-WEI


USER: Travis Warziniack                              G120831:1428CP-WIN
      USDA Forest Service, Rocky Mountain Research Station       DC9883


**** FILE SUMMARY

Input      C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\LakeErieLinked.gms
Output     C:\Users\twwarziniack\Dropbox\5_GreatLakes\EwECGE\EwEScenarios\model_linking_files\run1_2014_10_28_at_15_40_08\year2\LakeErieLinked.lst

**** USER ERROR(S) ENCOUNTERED
